//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TalentElevate
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class TalentElevateEntities : DbContext
    {
        public TalentElevateEntities()
            : base("name=TalentElevateEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<company_reg_tb> company_reg_tb { get; set; }
        public virtual DbSet<jobs_tb> jobs_tb { get; set; }
        public virtual DbSet<login_tb> login_tb { get; set; }
        public virtual DbSet<user_reg_tb> user_reg_tb { get; set; }
        public virtual DbSet<apply_tb> apply_tb { get; set; }
    
        public virtual int sp_company_reg(Nullable<int> companyid, string companyname, string companyemail, string companyphone, string description, string website)
        {
            var companyidParameter = companyid.HasValue ?
                new ObjectParameter("companyid", companyid) :
                new ObjectParameter("companyid", typeof(int));
    
            var companynameParameter = companyname != null ?
                new ObjectParameter("companyname", companyname) :
                new ObjectParameter("companyname", typeof(string));
    
            var companyemailParameter = companyemail != null ?
                new ObjectParameter("companyemail", companyemail) :
                new ObjectParameter("companyemail", typeof(string));
    
            var companyphoneParameter = companyphone != null ?
                new ObjectParameter("companyphone", companyphone) :
                new ObjectParameter("companyphone", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("description", description) :
                new ObjectParameter("description", typeof(string));
    
            var websiteParameter = website != null ?
                new ObjectParameter("website", website) :
                new ObjectParameter("website", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_company_reg", companyidParameter, companynameParameter, companyemailParameter, companyphoneParameter, descriptionParameter, websiteParameter);
        }
    
        public virtual int sp_jobs(Nullable<int> company_id, string job_title, string job_description, string job_type, Nullable<int> vacancy, Nullable<int> salary, string skillset, Nullable<int> experience, string location, string status, Nullable<System.DateTime> last_date)
        {
            var company_idParameter = company_id.HasValue ?
                new ObjectParameter("company_id", company_id) :
                new ObjectParameter("company_id", typeof(int));
    
            var job_titleParameter = job_title != null ?
                new ObjectParameter("job_title", job_title) :
                new ObjectParameter("job_title", typeof(string));
    
            var job_descriptionParameter = job_description != null ?
                new ObjectParameter("job_description", job_description) :
                new ObjectParameter("job_description", typeof(string));
    
            var job_typeParameter = job_type != null ?
                new ObjectParameter("job_type", job_type) :
                new ObjectParameter("job_type", typeof(string));
    
            var vacancyParameter = vacancy.HasValue ?
                new ObjectParameter("vacancy", vacancy) :
                new ObjectParameter("vacancy", typeof(int));
    
            var salaryParameter = salary.HasValue ?
                new ObjectParameter("salary", salary) :
                new ObjectParameter("salary", typeof(int));
    
            var skillsetParameter = skillset != null ?
                new ObjectParameter("skillset", skillset) :
                new ObjectParameter("skillset", typeof(string));
    
            var experienceParameter = experience.HasValue ?
                new ObjectParameter("experience", experience) :
                new ObjectParameter("experience", typeof(int));
    
            var locationParameter = location != null ?
                new ObjectParameter("location", location) :
                new ObjectParameter("location", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            var last_dateParameter = last_date.HasValue ?
                new ObjectParameter("last_date", last_date) :
                new ObjectParameter("last_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_jobs", company_idParameter, job_titleParameter, job_descriptionParameter, job_typeParameter, vacancyParameter, salaryParameter, skillsetParameter, experienceParameter, locationParameter, statusParameter, last_dateParameter);
        }
    
        public virtual int sp_login(Nullable<int> regid, string username, string password, string role, string status)
        {
            var regidParameter = regid.HasValue ?
                new ObjectParameter("regid", regid) :
                new ObjectParameter("regid", typeof(int));
    
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            var roleParameter = role != null ?
                new ObjectParameter("role", role) :
                new ObjectParameter("role", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_login", regidParameter, usernameParameter, passwordParameter, roleParameter, statusParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_login_id(string username, string password)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_login_id", usernameParameter, passwordParameter);
        }
    
        public virtual ObjectResult<string> sp_login_type(string username, string password)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_login_type", usernameParameter, passwordParameter);
        }
    
        public virtual int sp_loginCred(string username, string password, ObjectParameter status)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_loginCred", usernameParameter, passwordParameter, status);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_MAXidLogin()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_MAXidLogin");
        }
    
        public virtual int sp_user_reg(Nullable<int> userid, string fname, string lname, Nullable<int> age, string gender, string address, string email, string phone, string qualification, Nullable<int> experiance, string skills, string nationality, string city, string state, string pincode, string photo)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var fnameParameter = fname != null ?
                new ObjectParameter("fname", fname) :
                new ObjectParameter("fname", typeof(string));
    
            var lnameParameter = lname != null ?
                new ObjectParameter("lname", lname) :
                new ObjectParameter("lname", typeof(string));
    
            var ageParameter = age.HasValue ?
                new ObjectParameter("age", age) :
                new ObjectParameter("age", typeof(int));
    
            var genderParameter = gender != null ?
                new ObjectParameter("gender", gender) :
                new ObjectParameter("gender", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("phone", phone) :
                new ObjectParameter("phone", typeof(string));
    
            var qualificationParameter = qualification != null ?
                new ObjectParameter("qualification", qualification) :
                new ObjectParameter("qualification", typeof(string));
    
            var experianceParameter = experiance.HasValue ?
                new ObjectParameter("experiance", experiance) :
                new ObjectParameter("experiance", typeof(int));
    
            var skillsParameter = skills != null ?
                new ObjectParameter("skills", skills) :
                new ObjectParameter("skills", typeof(string));
    
            var nationalityParameter = nationality != null ?
                new ObjectParameter("nationality", nationality) :
                new ObjectParameter("nationality", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(string));
    
            var pincodeParameter = pincode != null ?
                new ObjectParameter("pincode", pincode) :
                new ObjectParameter("pincode", typeof(string));
    
            var photoParameter = photo != null ?
                new ObjectParameter("photo", photo) :
                new ObjectParameter("photo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_user_reg", useridParameter, fnameParameter, lnameParameter, ageParameter, genderParameter, addressParameter, emailParameter, phoneParameter, qualificationParameter, experianceParameter, skillsParameter, nationalityParameter, cityParameter, stateParameter, pincodeParameter, photoParameter);
        }
    
        public virtual int sp_jobsearch(string qry)
        {
            var qryParameter = qry != null ?
                new ObjectParameter("qry", qry) :
                new ObjectParameter("qry", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_jobsearch", qryParameter);
        }
    
        public virtual ObjectResult<sp_jobView_Result> sp_jobView()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_jobView_Result>("sp_jobView");
        }
    
        public virtual int sp_apply(Nullable<int> userid, Nullable<int> jobid, string resume, Nullable<System.DateTime> date, string status)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var jobidParameter = jobid.HasValue ?
                new ObjectParameter("jobid", jobid) :
                new ObjectParameter("jobid", typeof(int));
    
            var resumeParameter = resume != null ?
                new ObjectParameter("resume", resume) :
                new ObjectParameter("resume", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_apply", useridParameter, jobidParameter, resumeParameter, dateParameter, statusParameter);
        }
    
        public virtual ObjectResult<sp_applicantsView_Result> sp_applicantsView(Nullable<int> company_id)
        {
            var company_idParameter = company_id.HasValue ?
                new ObjectParameter("company_id", company_id) :
                new ObjectParameter("company_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_applicantsView_Result>("sp_applicantsView", company_idParameter);
        }
    
        public virtual int sp_sp_updateApplicantStatus(Nullable<int> applicant_id, Nullable<int> applyid, string statusname)
        {
            var applicant_idParameter = applicant_id.HasValue ?
                new ObjectParameter("applicant_id", applicant_id) :
                new ObjectParameter("applicant_id", typeof(int));
    
            var applyidParameter = applyid.HasValue ?
                new ObjectParameter("applyid", applyid) :
                new ObjectParameter("applyid", typeof(int));
    
            var statusnameParameter = statusname != null ?
                new ObjectParameter("statusname", statusname) :
                new ObjectParameter("statusname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_sp_updateApplicantStatus", applicant_idParameter, applyidParameter, statusnameParameter);
        }
    
        public virtual ObjectResult<sp_appiedjobsview_Result> sp_appiedjobsview(Nullable<int> userid)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_appiedjobsview_Result>("sp_appiedjobsview", useridParameter);
        }
    
        public virtual int sp_JobStatusUpdate(Nullable<int> apply_id, string status)
        {
            var apply_idParameter = apply_id.HasValue ?
                new ObjectParameter("apply_id", apply_id) :
                new ObjectParameter("apply_id", typeof(int));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_JobStatusUpdate", apply_idParameter, statusParameter);
        }
    }
}
